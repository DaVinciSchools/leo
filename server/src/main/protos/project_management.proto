syntax = "proto3";

import "pl_types.proto";

option java_multiple_files = true;
option java_package = "org.davincischools.leo.protos.project_management";

package project_management;

service ProjectManagementService {
  rpc GetMotivations (GetMotivationsRequest) returns (GetMotivationsResponse) {}
  rpc GetKnowledgeAndSkills (GetKnowledgeAndSkillsRequest) returns (GetKnowledgeAndSkillsResponse) {}
  rpc UpsertKnowledgeAndSkill (UpsertKnowledgeAndSkillRequest) returns (UpsertKnowledgeAndSkillResponse) {}

  rpc GenerateProjects (GenerateProjectsRequest) returns (GenerateProjectsResponse) {}
  rpc GenerateAnonymousProjects (GenerateAnonymousProjectsRequest) returns (GenerateAnonymousProjectsResponse) {}
  rpc RegisterAnonymousProjects (RegisterAnonymousProjectsRequest) returns (RegisterAnonymousProjectsResponse) {}

  rpc GetProjectDefinitions (GetProjectDefinitionsRequest) returns (GetProjectDefinitionsResponse) {}
  rpc GetProjectInputs (GetProjectInputsRequest) returns (GetProjectInputsResponse) {}
  rpc GetProjects (GetProjectsRequest) returns (GetProjectsResponse) {}

  rpc GetProjectDefinitionCategoryTypes (GetProjectDefinitionCategoryTypesRequest) returns (GetProjectDefinitionCategoryTypesResponse) {}
  rpc UpdateProject (UpdateProjectRequest) returns (UpdateProjectResponse) {}
}

message GetMotivationsRequest {
}

message GetMotivationsResponse {
}

message GenerateProjectsRequest {
  optional int32 assignment_id = 1;
  optional pl_types.ProjectDefinition definition = 2;
}

message GenerateProjectsResponse {
  optional int32 project_input_id = 1;
}

message GetProjectInputsRequest {
  repeated int32 user_x_ids = 1;
  repeated int32 project_input_ids = 2;
  optional bool include_complete = 3;
  optional bool include_processing = 4;
  optional bool include_assignment = 5;
}

message GetProjectInputsResponse {
  repeated pl_types.ProjectDefinition projects = 1;
}

message GetProjectsRequest {
  repeated int32 user_x_ids = 1;
  repeated int32 project_ids = 2;
  optional bool include_inactive = 3;
  optional bool include_tags = 4;
  optional bool include_inputs = 5;
  optional bool include_fulfillments = 6;
  optional bool include_assignment = 7;
  optional bool include_milestones = 8;
}

message GetProjectsResponse {
  repeated pl_types.Project projects = 1;
}

message UpdateProjectRequest {
  optional pl_types.Project project = 2;

  reserved 1;
  reserved "id";
}

message UpdateProjectResponse {
  optional pl_types.Project project = 1;
}

message GetProjectDefinitionsRequest {
  repeated int32 project_definition_ids = 1;
  repeated int32 assignment_ids = 2;
}

message GetProjectDefinitionsResponse {
  repeated pl_types.ProjectDefinition definitions = 1;
}

message GetProjectDefinitionCategoryTypesRequest {
  optional bool include_demos = 1;
}

message GetProjectDefinitionCategoryTypesResponse {
  repeated pl_types.ProjectInputCategory input_categories = 1;
}

message GenerateAnonymousProjectsRequest {
  repeated pl_types.ProjectInputValue input_values = 1;
}

message GenerateAnonymousProjectsResponse {
  optional int32 project_input_id = 1;
}

message RegisterAnonymousProjectsRequest {
  optional int32 project_input_id = 1;
}

message RegisterAnonymousProjectsResponse {
}

message GetKnowledgeAndSkillsRequest {
  repeated pl_types.KnowledgeAndSkill.Type types = 1;
}

message GetKnowledgeAndSkillsResponse {
  repeated pl_types.KnowledgeAndSkill knowledge_and_skills = 1;
}

message UpsertKnowledgeAndSkillRequest {
  optional pl_types.KnowledgeAndSkill knowledge_and_skill = 1;
}

message UpsertKnowledgeAndSkillResponse {
  optional pl_types.KnowledgeAndSkill knowledge_and_skill = 1;
}
