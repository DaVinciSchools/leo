syntax = "proto3";

import "pl_types.proto";

option java_multiple_files = true;
option java_package = "org.davincischools.leo.protos.project_management";

package project_management;

service ProjectManagementService {
  rpc GetMotivations (GetMotivationsRequest) returns (GetMotivationsResponse) {}
  rpc GetKnowledgeAndSkills (GetKnowledgeAndSkillsRequest) returns (GetKnowledgeAndSkillsResponse) {}
  rpc UpsertKnowledgeAndSkill (UpsertKnowledgeAndSkillRequest) returns (UpsertKnowledgeAndSkillResponse) {}
  rpc GenerateProjects (GenerateProjectsRequest) returns (GenerateProjectsResponse) {}
  rpc GenerateAnonymousProjects (GenerateAnonymousProjectsRequest) returns (GenerateAnonymousProjectsResponse) {}
  rpc RegisterAnonymousProjects (RegisterAnonymousProjectsRequest) returns (RegisterAnonymousProjectsResponse) {}

  rpc GetProjectDefinitionCategoryTypes (GetProjectDefinitionCategoryTypesRequest) returns (GetProjectDefinitionCategoryTypesResponse) {}
  rpc GetProjectDetails (GetProjectDetailsRequest) returns (GetProjectDetailsResponse) {}
  rpc GetProjects (GetProjectsRequest) returns (GetProjectsResponse) {}
  rpc UpdateProject (UpdateProjectRequest) returns (UpdateProjectResponse) {}

  rpc GetProjectDefinition (GetProjectDefinitionRequest) returns (GetProjectDefinitionResponse) {}
  rpc GetAssignmentProjectDefinitions (GetAssignmentProjectDefinitionsRequest) returns (GetAssignmentProjectDefinitionsResponse) {}
  rpc GetAssignmentProjectDefinition (GetAssignmentProjectDefinitionRequest) returns (GetAssignmentProjectDefinitionResponse) {}

  rpc GetProjectPosts (GetProjectPostsRequest) returns (GetProjectPostsResponse) {}
  rpc UpsertProjectPost (UpsertProjectPostRequest) returns (UpsertProjectPostResponse) {}
  rpc DeleteProjectPost (DeleteProjectPostRequest) returns (DeleteProjectPostResponse) {}
}

message GetMotivationsRequest {
}

message GetMotivationsResponse {
}

message GenerateProjectsRequest {
  optional int32 assignment_id = 1;
  optional pl_types.ProjectDefinition definition = 2;
}

message GenerateProjectsResponse {
  optional int32 project_input_id = 1;
}

message GetProjectDetailsRequest {
  optional int32 project_id = 1;
}

message GetProjectDetailsResponse {
  optional pl_types.Project project = 1;
}

message GetProjectsRequest {
  optional int32 user_x_id = 1;
  optional bool active_only = 2;
  optional bool include_unsuccessful = 3;
}

message GetProjectsResponse {
  repeated pl_types.Project projects = 1;
  repeated pl_types.ProjectDefinition unsuccessful_inputs = 2;
}

message UpdateProjectRequest {
  optional int32 id = 1;
  optional pl_types.Project modifications = 2;
}

message UpdateProjectResponse {
  optional pl_types.Project project = 1;
}

message GetProjectDefinitionRequest {
  optional int32 assignment_id = 1;
}

message GetProjectDefinitionResponse {
  optional pl_types.ProjectDefinition definition = 1;
}

message GetAssignmentProjectDefinitionsRequest {
  optional int32 assignment_id = 1;
}

message GetAssignmentProjectDefinitionsResponse {
  repeated pl_types.ProjectDefinition definitions = 1;
}

message GetAssignmentProjectDefinitionRequest {
  optional int32 assignment_id = 1;
}

message GetAssignmentProjectDefinitionResponse {
  optional pl_types.ProjectDefinition definition = 1;
}

message GetProjectPostsRequest {
  optional int32 project_id = 1;
}

message GetProjectPostsResponse {
  repeated pl_types.ProjectPost project_posts = 1;
}

message UpsertProjectPostRequest {
  optional int32 project_id = 1;
  optional pl_types.ProjectPost project_post = 2;
}

message UpsertProjectPostResponse {
  optional int32 project_post_id = 1;
}

message DeleteProjectPostRequest {
  optional int32 id = 1;
}

message DeleteProjectPostResponse {
}

message GetProjectDefinitionCategoryTypesRequest {
  optional bool include_demos = 1;
}

message GetProjectDefinitionCategoryTypesResponse {
  repeated pl_types.ProjectInputCategory input_categories = 1;
}

message GenerateAnonymousProjectsRequest {
  repeated pl_types.ProjectInputValue input_values = 1;
}

message GenerateAnonymousProjectsResponse {
  optional int32 project_input_id = 1;
}

message RegisterAnonymousProjectsRequest {
  optional int32 project_input_id = 1;
}

message RegisterAnonymousProjectsResponse {
}

message GetKnowledgeAndSkillsRequest {
  repeated pl_types.KnowledgeAndSkill.Type types = 1;
}

message GetKnowledgeAndSkillsResponse {
  repeated pl_types.KnowledgeAndSkill knowledge_and_skills = 1;
}

message UpsertKnowledgeAndSkillRequest {
  optional pl_types.KnowledgeAndSkill knowledge_and_skill = 1;
}

message UpsertKnowledgeAndSkillResponse {
  optional pl_types.KnowledgeAndSkill knowledge_and_skill = 1;
}
