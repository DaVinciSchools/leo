# Properties in this file are available to Spring. However, there are some
# libraries that are not aware of the Spring framework. Consequently, they
# do not pick up on the properties in this file. If you add a property
# that doesn't seem to take effect in an external library, see if it needs
# to be added to CopyEnvironmentPropertiesToSystemProperties

# These properties can be overridden for production or testing. See this
# documentation for how to do so:
# https://github.com/DaVinciSchools/leo/blob/main/BUILDING.md#external-dependencies

# Since we are proxying requests to the React server during development, we
# need to pass header values to the client that we normally wouldn't set.
# So, we have to whitelist restricted header names so that WebClient allows
# them.
#
# This is only used during development. So, it's okay that this approach is
# brittle.
jdk.httpclient.allowRestrictedHeaders=connection,host
jdk.httpclient.HttpClient.log=errors,requests,headers

# Set to the OpenAI key used for queries. Its value starts with "sk-".
openai.api.key=<your_open_ai_api_key>
openai.url=https://api.openai.com

# Normally a test MySQL instance will be spun up and initialized with canned
# data. However, enable the following profile and properties to use an
# external database.
#
# spring.profiles.active=useExternalDatabase
#
# spring.datasource.url=jdbc:mysql://localhost:3306/leo_temp
# spring.datasource.username=temp
# spring.datasource.password=temp
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA configuration settings.
hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC