<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>server</artifactId>
    <name>Leo Server</name>
    <description>Leo Server</description>

    <parent>
        <groupId>org.davincischools.leo</groupId>
        <artifactId>root</artifactId>
        <version>${revision}</version>
        <relativePath>./../pom.xml</relativePath>
    </parent>

    <properties>
        <clients.directory>${basedir}/src/main/clients</clients.directory>
        <java.version>17</java.version>
        <log4j.version>2.19.0</log4j.version>
        <npm.binary.directory>${project.build.directory}/org.davincischools.leo/npm</npm.binary.directory>
        <spring.version>3.0.2</spring.version>
    </properties>

    <dependencies>
        <!-- Spring framework. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- JUnit/Junit-Jupiter testing. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.9.2</version>
            <scope>test</scope>
        </dependency>
        <!--  Java logging with Apache Log4j 2.  -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <!--
            Other Spring packages use this as the logger. Log4j only allows
            one logger implementation to be registered. So, we are stuck with
            this instead of apache's implementation.
        -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.5</version>
        </dependency>
        <!-- A collection of useful functions. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Build the spring web server. -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.version}</version>
            </plugin>
            <!-- Build the browser client. -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
                <executions>
                    <!-- Install node executable. -->
                    <execution>
                        <id>install node and npm client</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                    <!-- Install npm. -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <!-- Build the React web app. -->
                    <execution>
                        <id>npm build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <nodeVersion>v18.14.0</nodeVersion>
                    <installDirectory>${npm.binary.directory}</installDirectory>
                    <workingDirectory>${clients.directory}/web-browser</workingDirectory>
                    <environmentVariables>
                        <revision>${revision}</revision>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- Copy compiled React web app to the classpath for serving. -->
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.build.outputDirectory}/org/davincischools/leo/server/www">
                                    <fileset dir="${clients.directory}/web-browser/build/"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Delete additional files for mvn clean. -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${clients.directory}</directory>
                            <includes>
                                <include>*/build/</include>
                                <include>*/coverage/</include>
                                <include>*/node_modules/</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
