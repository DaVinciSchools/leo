<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>project-leo-server</artifactId>
    <version>${revision}</version>

    <name>Project Leo Server</name>
    <description>Project Leo Server</description>

    <parent>
        <groupId>org.davincischools.leo</groupId>
        <artifactId>project-leo</artifactId>
        <version>${revision}</version>
        <relativePath>./../pom.xml</relativePath>
    </parent>

    <properties>
        <clients.directory>${basedir}/src/main/clients</clients.directory>
        <npm.binary.directory>${project.build.directory}/org.davincischools.leo/npm</npm.binary.directory>
        <proto.version>3.22.0</proto.version>
        <surefire.version>3.0.0-M8</surefire.version>
    </properties>

    <dependencies>
        <!-- Spring framework. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring.boot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>
        <!-- Needed to proxy services to React web server. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <version>${spring.framework.version}</version>
        </dependency>

        <!-- Parse command line options. -->
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.82</version>
        </dependency>

        <!-- Protocol Buffers in Java. -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${proto.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>${proto.version}</version>
        </dependency>

        <!-- Project Leo -->
        <dependency>
            <groupId>org.davincischools.leo</groupId>
            <artifactId>project-leo-database</artifactId>
            <version>${revision}</version>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/main/resources</directory>
            </testResource>
        </testResources>
        <extensions>
            <!-- Provides OS specific information. Needed for protoc binary. -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.1</version>
            </extension>
        </extensions>
        <plugins>
            <!-- Add java-protos to the source folders. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>add-java-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <!-- See note in 'generate-protobuf-java' for
                                     why we add this folder. -->
                                <source>${project.build.sourceDirectory}/../java-protos</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build the spring web server. -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
            </plugin>

            <!-- Build the browser client. -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
                <executions>
                    <!-- Install node executable. -->
                    <execution>
                        <id>install-node-and-npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>

                    <!-- Install npm. -->
                    <execution>
                        <id>npm-install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <arguments>install --ignore-scripts</arguments>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <!-- NOTE: nodeVersion need to remain in sync with
                         the versions in web-browser/package.json, commented
                         there. -->
                    <nodeVersion>v18.14.2</nodeVersion>
                    <installDirectory>${npm.binary.directory}</installDirectory>
                    <workingDirectory>${clients.directory}/web-browser</workingDirectory>
                    <environmentVariables>
                        <revision>${revision}</revision>
                    </environmentVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- Make Protocol Buffer destination dirs. -->
                    <execution>
                        <id>make-protobuf-dirs</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${clients.directory}/web-browser/src/generated"/>
                                <mkdir dir="${project.build.sourceDirectory}/../java-protos"/>
                            </target>
                        </configuration>
                    </execution>
                    <!-- Compile Protocol Buffers for JavaScript. -->
                    <execution>
                        <id>generate-protobuf-javascript</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <!-- Compile Protocol Buffers to JavaScript. -->
                                <property environment="env"/>
                                <apply executable="${npm.binary.directory}/node/npx" dir="${clients.directory}/web-browser" failonerror="true" parallel="true" skipemptyfilesets="true">
                                    <env key="PATH" path="${npm.binary.directory}/node:${env.PATH}"/>
                                    <env key="CI" value="true"/>
                                    <arg value="pbjs"/>
                                    <arg line="--target static-module"/>
                                    <arg line="--wrap commonjs"/>
                                    <arg value="--force-long"/>
                                    <arg value="--null-defaults"/>
                                    <arg value="--out"/>
                                    <arg file="${clients.directory}/web-browser/src/generated/protobuf-js.js"/>
                                    <fileset dir="${project.build.sourceDirectory}/../protos" includes="**/*.proto"/>
                                </apply>
                                <!-- Create TypeScript from JavaScript. -->
                                <exec executable="${npm.binary.directory}/node/npx" dir="${clients.directory}/web-browser" failonerror="true">
                                    <env key="PATH" path="${npm.binary.directory}/node:${env.PATH}"/>
                                    <env key="CI" value="true"/>
                                    <arg value="pbts"/>
                                    <arg value="--out"/>
                                    <arg file="${clients.directory}/web-browser/src/generated/protobuf-js.d.ts"/>
                                    <arg file="${clients.directory}/web-browser/src/generated/protobuf-js.js"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <!-- Format JavaScript/TypeScript using the Google TypeScript formatter. -->
                    <execution>
                        <id>format-javascript-files</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <target>
                                <property environment="env"/>
                                <apply executable="${npm.binary.directory}/node/npx" dir="${clients.directory}/web-browser" failonerror="true" parallel="true" skipemptyfilesets="true">
                                    <env key="PATH" path="${npm.binary.directory}/node:${env.PATH}"/>
                                    <env key="CI" value="true"/>
                                    <arg value="gts"/>
                                    <arg value="fix"/>
                                    <fileset dir="${clients.directory}" erroronmissingdir="false">
                                        <include name="**/*.js"/>
                                        <include name="**/*.jsx"/>
                                        <include name="**/*.ts"/>
                                        <include name="**/*.tsx"/>
                                        <include name="**/.*.js"/>
                                        <include name="**/.*.jsx"/>
                                        <include name="**/.*.ts"/>
                                        <include name="**/.*.tsx"/>
                                        <exclude name="*/node_modules/**/*"/>
                                        <exclude name="*/src/generated/**/*"/>
                                        <exclude name="*/build/**/*"/>
                                    </fileset>
                                </apply>
                            </target>
                        </configuration>
                    </execution>

                    <!-- Build the React web app. -->
                    <execution>
                        <id>compile-web-browser-client</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <property environment="env"/>
                                <exec executable="${npm.binary.directory}/node/npm" dir="${clients.directory}/web-browser" failonerror="true">
                                    <env key="PATH" path="${npm.binary.directory}/node:${env.PATH}"/>
                                    <env key="CI" value="true"/>
                                    <arg value="run"/>
                                    <arg value="build"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <!-- Copy compiled React web app to the classpath for serving. -->
                    <execution>
                        <id>copy-web-browser-client</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <copy todir="${project.build.outputDirectory}/org/davincischools/leo/server/www">
                                    <fileset dir="${clients.directory}/web-browser/build/"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compile Protocol Buffers for Java.

                 Unfortunately, VS Code seems to delete
                 target/generated-sources/java when we don't want it to, which
                 breaks the build. So, we store the generated java code in
                 src/main/java-protos and mark that directory as ignored by
                 git. -->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>generate-protobuf-java</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <protocArtifact>com.google.protobuf:protoc:${proto.version}:exe:${os.detected.classifier}</protocArtifact>
                            <protoSourceRoot>${project.build.sourceDirectory}/../protos</protoSourceRoot>
                            <outputDirectory>${project.build.sourceDirectory}/../java-protos</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Run the vintage JUnit 4 tests. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>${surefire.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Delete additional files for mvn clean. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${clients.directory}</directory>
                            <includes>
                                <include>*/build/</include>
                                <include>*/coverage/</include>
                                <include>*/node_modules/</include>
                                <include>*/package-lock.json</include>
                                <include>*/src/generated/</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>${project.build.sourceDirectory}/..</directory>
                            <includes>
                                <include>java-protos/</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Create an executable JAR. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>copy maven dependencies</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/org/davincischools/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.davincischools.leo.server.ServerApplication</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>org/davincischools/libs/</classpathPrefix>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                        <manifestEntries>
                            <mode>development</mode>
                            <url>https://github.com/DaVinciSchools/leo</url>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
