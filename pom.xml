<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.davincischools.leo</groupId>
    <artifactId>project-leo</artifactId>
    <version>${revision}</version>
    <url>https://github.com/DaVinciSchools/leo</url>
    <packaging>pom</packaging>

    <name>Project Leo</name>
    <description>Project Leo</description>

    <modules>
        <module>server</module>
    </modules>

    <properties>
        <log4j.version>2.19.0</log4j.version>

        <revision>0.0.1-SNAPSHOT</revision>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--  Java logging with Apache Log4j 2.  -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <!--
            Other Spring packages use this as the logger. Log4j only allows
            one logger implementation to be registered. So, we are stuck with
            this instead of apache's implementation.
        -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.5</version>
        </dependency>

        <!-- Libraries of useful functions. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.1-jre</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.21</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.10.0</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.5.0</version>
        </dependency>

        <!-- MySQL -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.0.32</version>
        </dependency>

        <!-- Google's java formatter. -->
        <dependency>
            <groupId>com.google.googlejavaformat</groupId>
            <artifactId>google-java-format</artifactId>
            <version>1.15.0</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <!-- Format Java code using the Google Java formatter. -->
                    <execution>
                        <id>format-java-files</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <apply executable="java" failonerror="true" parallel="true" skipemptyfilesets="true">
                                    <arg value="-classpath"/>
                                    <arg pathref="maven.compile.classpath"/>
                                    <arg line="--add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED"/>
                                    <arg line="--add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED"/>
                                    <arg line="--add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED"/>
                                    <arg line="--add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED"/>
                                    <arg line="--add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"/>
                                    <arg value="com.google.googlejavaformat.java.Main"/>
                                    <arg value="--replace"/>
                                    <fileset dir="${project.build.sourceDirectory}" includes="**/*.java" erroronmissingdir="false"/>
                                    <fileset dir="${project.build.testSourceDirectory}" includes="**/*.java" erroronmissingdir="false"/>
                                    <fileset dir="${project.build.directory}" includes="**/*.java" erroronmissingdir="false"/>
                                </apply>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
